* [**Enums**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#enums)  
  * [`Item.Property`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#Property)  
  * [`Item.LootTag`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#LootTag)  
  * [`Item.StackKind`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#StackKind)  

* [**Static Methods**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#static-methods)  
  * [`Item.new`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#new)  
  * [`Item.find`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#)  
  * [`Item.find_all`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#)  
  * [`Item.wrap`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#)  

<br><br>

---

## Enums  

<a name="Property"></a>
```lua
Item.Property = {
    NAMESPACE          = 0  
    IDENTIFIER         = 1  
    TOKEN_NAME         = 2  
    TOKEN_TEXT         = 3  
    ON_ACQUIRED        = 4  
    ON_REMOVED         = 5  
    TIER               = 6  
    SPRITE_ID          = 7  
    OBJECT_ID          = 8  
    ITEM_LOG_ID        = 9  
    ACHIEVEMENT_ID     = 10  
    IS_HIDDEN          = 11  
    EFFECT_DISPLAY     = 12  
    ACTOR_COMPONENT    = 13  
    LOOT_TAGS          = 14  
    IS_NEW_ITEM        = 15  
}
```

<a name="LootTag"></a>
```lua
Item.LootTag = {
    CATEGORY_DAMAGE                  = 1  
    CATEGORY_HEALING                 = 2  
    CATEGORY_UTILITY                 = 4  
    EQUIPMENT_BLACKLIST_ENIGMA       = 8  
    EQUIPMENT_BLACKLIST_CHAOS        = 16  
    EQUIPMENT_BLACKLIST_ACTIVATOR    = 32  
    ITEM_BLACKLIST_ENGI_TURRETS      = 64  
    ITEM_BLACKLIST_VENDOR            = 128  
    ITEM_BLACKLIST_INFUSER           = 256  
}
```

<a name="StackKind"></a>
```lua
Item.StackKind = {
    NORMAL            = 0  
    TEMPORARY_BLUE    = 1  
    TEMPORARY_RED     = 2  
    ANY               = 3  
    TEMPORARY_ANY     = 4  
}
```

<br><br>

namespace | string | The namespace the item is in.
identifier | string | The identifier for the item within the namespace.
token_name | string | The localization token for the item's name.
token_text | string | The localization token for the item's pickup text.
on_acquired | number | The ID of the callback that runs when the item is acquired.
on_removed | number | The ID of the callback that runs when the item is removed.
tier | number | The tier of the item.
sprite_id | sprite | The sprite ID of the item.
object_id | object | The object ID of the item.
item_log_id | number | The item log ID of the item.
achievement_id | number | The achievement ID of the item. <br>If *not* `-1`, the item will be locked until the achievement is unlocked.
is_hidden | bool |
effect_display | |
actor_component | |
loot_tags | number | The sum of all loot tags applied to the item.
is_new_item | bool | `true` for new vanilla items added in *Returns*.

<br><br>

---

## Static Methods  

<a name="new"></a>
```lua
Item.new(identifier) -> Item  
```

Creates a new item with the given identifier if it does not already exist,
or returns the existing one if it does.

**Parameters**  
Parameter | Type | Description
| - | - | -
`identifier` | string | The identifier for the item.

<br><br>

<a name=""></a>
```lua
Item.find(identifier, [namespace]) -> Item or nil  
```

Searches for the specified item and returns it.
If no namespace is provided, searches in your mod's namespace first, and "ror" second.

**Parameters**  
Parameter | Type | Description
| - | - | -
`identifier` | string | The identifier to search for.
`[namespace]` | string | The namespace to search in.

<br><br>

<a name=""></a>
```lua
Item.find_all(filter, [property]) -> table  
```

Returns a table of items matching the specified filter and property.

**NOTE:** Filtering by a non-namespace property is *very slow*!
Try not to do that too much.

**Parameters**  
Parameter | Type | Description
| - | - | -
`filter` |  | The filter to search by.
`[property]` | number | The property to check. <br>[`Item.Property.NAMESPACE`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#Property) by default.

<br><br>

<a name=""></a>
```lua
Item.wrap(item_id) -> Item  
```

Returns an Item wrapper containing the provided item ID.

**Parameters**  
Parameter | Type | Description
| - | - | -
`item_id` | number | The item ID to wrap.