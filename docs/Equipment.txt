* [**Enums**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#enums)
  * [`Equipment.Property`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#Property)

* [**Properties**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#properties)

* [**Static Methods**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#static-methods)
  * [`Equipment.new`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#new)
  * [`Equipment.find`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#find)
  * [`Equipment.find_all`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#find_all)
  * [`Equipment.wrap`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#wrap)

* [**Instance Methods**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#instance-methods)
  * [`equipment:print_properties`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#print_properties)
  * [`equipment:create`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#create)
  * [`equipment:set_sprite`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#set_sprite)
  * [`equipment:set_tier`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#set_tier)
  * [`equipment:set_loot_tags`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#set_loot_tags)
  * [`equipment:is_passive`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#is_passive)
  * [`equipment:set_passive`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#set_passive)

<br><br>

---

## Enums

<a name="Property"></a>
```lua
Equipment.Property = {
    NAMESPACE           = 0
    IDENTIFIER          = 1
    TOKEN_NAME          = 2
    TOKEN_TEXT          = 3
    ON_USE              = 4
    COOLDOWN            = 5
    TIER                = 6
    SPRITE_ID           = 7
    OBJECT_ID           = 8
    ITEM_LOG_ID         = 9
    ACHIEVEMENT_ID      = 10
    EFFECT_DISPLAY      = 11
    LOOT_TAGS           = 12
    IS_NEW_EQUIPMENT    = 13
}
```

<br><br>

---

## Properties

Property | Type | Description
| - | - | -
`namespace` | string | The namespace the equipment is in.
`identifier` | string | The identifier for the equipment within the namespace.
`token_name` | string | The localization token for the equipment's name.
`token_text` | string | The localization token for the equipment's pickup text.
`on_use` | number | The ID of the callback that runs when the equipment is activated.
`cooldown` | number | The cooldown of the equipment (in frames).
`tier` | number | The tier of the equipment.
`sprite_id` | sprite | The sprite ID of the equipment.
`object_id` | object | The object ID of the equipment.
`item_log_id` | number | The item log ID of the equipment.
`achievement_id` | number | The achievement ID of the equipment. <br>If *not* `-1`, the equipment will be locked until the achievement is unlocked.
`effect_display` |  | 
`loot_tags` | number | The sum of all loot tags applied to the item.
`is_new_equipment` | bool | `true` for new vanilla equipment added in *Returns*.

<br><br>

---

## Static Methods

<a name="new"></a>
```lua
Equipment.new(identifier) -> Equipment
```

Creates a new equipment with the given identifier if it does not already exist,  
or returns the existing one if it does.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`identifier` | string | The identifier for the equipment.

<br><br>

<a name="find"></a>
```lua
Equipment.find(identifier, [namespace]) -> Equipment or nil
```

Searches for the specified equipment and returns it.  
If no namespace is provided, searches in your mod's namespace first, and "ror" second.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`identifier` | string | The identifier to search for.
`[namespace]` | string | *Optional.* The namespace to search in.

<br><br>

<a name="find_all"></a>
```lua
Equipment.find_all(filter, [property]) -> table
```

Returns a table of equipment matching the specified filter and property  
  
**NOTE:** Filtering by a non-namespace property is *very slow*!  
Try not to do that too much.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`filter` |  | The filter to search by.
`[property]` | number | *Optional.* The property to check. <br>[`Equipment.Property.NAMESPACE`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Equipment#Property) by default.

<br><br>

<a name="wrap"></a>
```lua
Equipment.wrap(equip_id) -> Equipment
```

Returns an Equipment wrapper containing the provided equipment ID.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`equip_id` | number | The equipment ID to wrap.

<br><br>

---

## Instance Methods

<a name="print_properties"></a>
```lua
equipment:print_properties() -> nil
```

Prints the equipment's properties.  

**Parameters**  
None

<br><br>

<a name="create"></a>
```lua
equipment:create(x, y, [target]) -> Instance
```

Spawns and returns an equipment drop.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`x` | number | The x spawn coordinate.
`y` | number | The y spawn coordinate.
`[target]` | Instance | *Optional.* If provided, the drop will move towards the target instance's position. <br>The position is determined on spawn, and does not follow the instance if they move. <br>If `nil`, will drop in a random direction around the spawn location.

<br><br>

<a name="set_sprite"></a>
```lua
equipment:set_sprite(sprite) -> nil
```

Sets the sprite of the equipment.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`sprite` | Sprite | The sprite to set.

<br><br>

<a name="set_tier"></a>
```lua
equipment:set_tier(tier) -> nil
```

Sets the tier of the equipment, and assigns it to the appropriate  
loot pool (will remove from all previous loot pools).  

**Parameters**  
Parameter | Type | Description
| - | - | -
`tier` | number | The [tier](https://github.com/ReturnsAPI/ReturnsAPI/wiki/ItemTier#constants) to set.

<br><br>

<a name="set_loot_tags"></a>
```lua
equipment:set_loot_tags(...) -> nil
```

Sets the loot tags of the equipment.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`...` | number(s) | A variable number of [loot tags](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#LootTag) to add.

<br><br>

<a name="is_passive"></a>
```lua
equipment:is_passive() -> bool
```

Returns `true` if this equipment is marked as passive.  

**Parameters**  
None

<br><br>

<a name="set_passive"></a>
```lua
equipment:set_passive(bool) -> nil
```

Sets whether or not the equipment is passive (i.e., cannot be activated).  

**Parameters**  
Parameter | Type | Description
| - | - | -
`bool` | bool | `true` (passive) or `false` (active)

<br><br>

