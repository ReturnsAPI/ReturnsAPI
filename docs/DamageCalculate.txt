* [**Static Methods**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/DamageCalculate#static-methods)
  * [`DamageCalculate.add`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/DamageCalculate#add)
  * [`DamageCalculate.remove_all`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/DamageCalculate#remove_all)

<br><br>

---

## Static Methods

<a name="add"></a>
```lua
DamageCalculate.add(fn, [priority]) -> nil
```

Registers a function for modifying damage calculation.  
  
**Priority Convention**  
To allow for a decent amount of space between priorities,  
use the enum values in [`Callback.Priority`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Callback#Priority).  
If you need to be more specific than that, try to keep a distance of at least `100`.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`fn` | function | The function to register. <br>The parameters for it are `api`.
`[priority]` | number | *Optional.* The priority of the function. <br>Higher values run before lower ones; can be negative. <br>`Callback.Priority.NORMAL` (`0`) by default.

<br><br>

<a name="remove_all"></a>
```lua
DamageCalculate.remove_all() -> nil
```

Removes all registered damage calculation functions from your namespace.  
  
Automatically called when you hotload your mod.  

**Parameters**  
None

<br><br>

