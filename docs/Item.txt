* [**Enums**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#enums)
  * [`Item.Property`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#Property)
  * [`Item.LootTag`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#LootTag)
  * [`Item.StackKind`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#StackKind)

* [**Properties**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#properties)

* [**Static Methods**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#static-methods)
  * [`Item.new`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#new)
  * [`Item.find`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#find)
  * [`Item.find_all`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#find_all)
  * [`Item.wrap`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#wrap)

* [**Instance Methods**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#instance-methods)
  * [`item:print_properties`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#print_properties)
  * [`item:create`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#create)
  * [`item:set_sprite`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#set_sprite)
  * [`item:set_tier`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#set_tier)
  * [`item:set_loot_tags`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#set_loot_tags)

<br><br>

---

## Enums

<a name="Property"></a>
```lua
Item.Property = {
    NAMESPACE          = 0
    IDENTIFIER         = 1
    TOKEN_NAME         = 2
    TOKEN_TEXT         = 3
    ON_ACQUIRED        = 4
    ON_REMOVED         = 5
    TIER               = 6
    SPRITE_ID          = 7
    OBJECT_ID          = 8
    ITEM_LOG_ID        = 9
    ACHIEVEMENT_ID     = 10
    IS_HIDDEN          = 11
    EFFECT_DISPLAY     = 12
    ACTOR_COMPONENT    = 13
    LOOT_TAGS          = 14
    IS_NEW_ITEM        = 15
}
```

<a name="LootTag"></a>
```lua
Item.LootTag = {
    CATEGORY_DAMAGE                 = 1,
    CATEGORY_HEALING                = 2,
    CATEGORY_UTILITY                = 4,
    EQUIPMENT_BLACKLIST_ENIGMA      = 8,
    EQUIPMENT_BLACKLIST_CHAOS       = 16,
    EQUIPMENT_BLACKLIST_ACTIVATOR   = 32,
    ITEM_BLACKLIST_ENGI_TURRETS     = 64,
    ITEM_BLACKLIST_VENDOR           = 128,
    ITEM_BLACKLIST_INFUSER          = 256
}
```

<a name="StackKind"></a>
```lua
Item.StackKind = {
    NORMAL          = 0,
    TEMPORARY_BLUE  = 1,
    TEMPORARY_RED   = 2,
    ANY             = 3,
    TEMPORARY_ANY   = 4
}
```

<br><br>

---

## Properties

Property | Type | Description
| - | - | -
`namespace` | string | The namespace the item is in.
`identifier` | string | The identifier for the item within the namespace.
`token_name` | string | The localization token for the item's name.
`token_text` | string | The localization token for the item's pickup text.
`on_acquired` | number | The ID of the callback that runs when the item is acquired.
`on_removed` | number | The ID of the callback that runs when the item is removed.
`tier` | number | The tier of the item.
`sprite_id` | sprite | The sprite ID of the item.
`object_id` | object | The object ID of the item.
`item_log_id` | number | The item log ID of the item.
`achievement_id` | number | The achievement ID of the item. <br>If *not* `-1`, the item will be locked until the achievement is unlocked.
`is_hidden` | bool | 
`effect_display` |  | 
`actor_component` |  | 
`loot_tags` | number | The sum of all loot tags applied to the item.
`is_new_item` | bool | `true` for new vanilla items added in *Returns*.

<br><br>

---

## Static Methods

<a name="new"></a>
```lua
Item.new(identifier) -> Item
```

Creates a new item with the given identifier if it does not already exist,  
or returns the existing one if it does.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`identifier` | string | The identifier for the item.

<br><br>

<a name="find"></a>
```lua
Item.find(identifier, [namespace]) -> Item or nil
```

Searches for the specified item and returns it.  
If no namespace is provided, searches in your mod's namespace first, and "ror" second.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`identifier` | string | The identifier to search for.
`[namespace]` | string | *Optional.* The namespace to search in.

<br><br>

<a name="find_all"></a>
```lua
Item.find_all(filter, [property]) -> table, bool
```

Returns a table of items matching the specified filter and property,  
and a boolean that is `true` if the table is *not* empty.  
  
**NOTE:** Filtering by a non-namespace property is *very slow*!  
Try not to do that too much.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`filter` |  | The filter to search by.
`[property]` | number | *Optional.* The property to check. <br>[`Item.Property.NAMESPACE`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#Property) by default.

<br><br>

<a name="wrap"></a>
```lua
Item.wrap(item_id) -> Item
```

Returns an Item wrapper containing the provided item ID.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`item_id` | number | The item ID to wrap.

<br><br>

---

## Instance Methods

<a name="print_properties"></a>
```lua
item:print_properties() -> nil
```

Prints the item's properties.  

**Parameters**  
None

<br><br>

<a name="create"></a>
```lua
item:create(x, y, [target]) -> Instance
```

Spawns and returns an item drop.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`x` | number | The x spawn coordinate.
`y` | number | The y spawn coordinate.
`[target]` | Instance | *Optional.* If provided, the drop will move towards the target instance's position. <br>The position is determined on spawn, and does not follow the instance if they move. <br>If `nil`, will drop in a random direction around the spawn location.

<br><br>

<a name="set_sprite"></a>
```lua
item:set_sprite(sprite) -> nil
```

Sets the sprite of the item.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`sprite` | Sprite | The sprite to set.

<br><br>

<a name="set_tier"></a>
```lua
item:set_tier(tier) -> nil
```

Sets the tier of the item, and assigns it to the appropriate  
loot pool (will remove from all previous loot pools).  

**Parameters**  
Parameter | Type | Description
| - | - | -
`tier` | number | The [tier](https://github.com/ReturnsAPI/ReturnsAPI/wiki/ItemTier#constants) to set.

<br><br>

<a name="set_loot_tags"></a>
```lua
item:set_loot_tags(...) -> nil
```

Sets the loot tags of the item.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`...` | number(s) | A variable number of [loot tags](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Item#LootTag) to add.

<br><br>

