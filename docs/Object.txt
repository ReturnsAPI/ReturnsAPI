* [**Enums**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#enums)
  * [`Object.Property`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#Property)
  * [`Object.Parent`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#Parent)

* [**Static Methods**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#static-methods)
  * [`Object.new`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#new)
  * [`Object.find`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#find)
  * [`Object.find_by_tag`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#find_by_tag)
  * [`Object.wrap`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#wrap)

* [**Instance Methods**](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#instance-methods)
  * [`object:create`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#create)
  * [`object:set_sprite`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#set_sprite)
  * [`object:set_depth`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#set_depth)
  * [`object:add_tag`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#add_tag)
  * [`object:remove_tag`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#remove_tag)
  * [`object:has_tag`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#has_tag)
  * [`object:get_tags`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#get_tags)

<br><br>

---

## Enums

<a name="Property"></a>
```lua
Object.Property = {
    BASE        = 0,
    OBJ_DEPTH   = 1,
    OBJ_SPRITE  = 2,
    IDENTIFIER  = 3,
    NAMESPACE   = 4,
    ON_CREATE   = 5,
    ON_DESTROY  = 6,
    ON_STEP     = 7,
    ON_DRAW     = 8
}
```

<a name="Parent"></a>
```lua
Object.Parent = {
    ACTOR               = gm.constants.pActor,
    ENEMY_CLASSIC       = gm.constants.pEnemyClassic,
    ENEMY_FLYING        = gm.constants.pEnemyFlying,
    BOSS                = gm.constants.pBoss,
    BOSS_CLASSIC        = gm.constants.pBossClassic,
    PICKUP_ITEM         = gm.constants.pPickupItem,
    PICKUP_EQUIPMENT    = gm.constants.pPickupEquipment,
    DRONE               = gm.constants.pDrone,
    MAP_OBJECTS         = gm.constants.pMapObjects,
    INTERACTABLE        = gm.constants.pInteractable,
    INTERACTABLE_CHEST  = gm.constants.pInteractableChest,
    INTERACTABLE_CRATE  = gm.constants.pInteractableCrate,
    INTERACTABLE_DRONE  = gm.constants.pInteractableDrone
}
```

<br><br>

---

## Static Methods

<a name="new"></a>
```lua
Object.new(identifier) -> Object
```

Creates a new object with the given identifier if it does not already exist,  
or returns the existing one if it does.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`identifier` | string | The identifier for the object.

<br><br>

<a name="find"></a>
```lua
Object.find(identifier, [namespace]) -> Object or nil
```

Searches for the specified object and returns it.  
If no namespace is provided, searches in your mod's namespace first, and "ror" second.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`identifier` | string | The identifier to search for.
`[namespace]` | string | *Optional.* The namespace to search in.

<br><br>

<a name="find_by_tag"></a>
```lua
Object.find_by_tag(tag) -> table, number
```

Returns a key-value pair table of all objects with the specified tag,  
and the number of objects in the table.  
  
Each key-value pair is `object_index, Object wrapper`.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`tag` | string | The tag to search by.

<br><br>

<a name="wrap"></a>
```lua
Object.wrap(object) -> Object
```

Returns an Object wrapper containing the provided object index.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`object` | number | The object index to wrap.

<br><br>

---

## Instance Methods

<a name="create"></a>
```lua
object:create(x, y) -> Instance
```

Creates and returns an instance of the specified object.  
  
Also exists as a [method of Instance](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Instance#create).  

**Parameters**  
Parameter | Type | Description
| - | - | -
`x` | number | The x spawn coordinate. <br>`0` by default.
`y` | number | The y spawn coordinate. <br>`0` by default.

<br><br>

<a name="set_sprite"></a>
```lua
object:set_sprite(sprite) -> nil
```

Sets the sprite of the object.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`sprite` | sprite | The sprite to set.

<br><br>

<a name="set_depth"></a>
```lua
object:set_depth(depth) -> nil
```

Sets the depth of the object.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`depth` | number | The depth to set.

<br><br>

<a name="add_tag"></a>
```lua
object:add_tag(tag) -> nil
```

Adds a tag to this object.  
The purpose of this is to allow for easier lookup  
for groups of objects (see [`Object.find_by_tag`](https://github.com/ReturnsAPI/ReturnsAPI/wiki/Object#find_by_tag)).  

**Parameters**  
Parameter | Type | Description
| - | - | -
`tag` | string | The tag to add.

<br><br>

<a name="remove_tag"></a>
```lua
object:remove_tag(tag) -> nil
```

Removes a tag from this object.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`tag` | string | The tag to remove.

<br><br>

<a name="has_tag"></a>
```lua
object:has_tag(tag) -> bool
```

Returns `true` if this object has the specified tag.  

**Parameters**  
Parameter | Type | Description
| - | - | -
`tag` | string | The tag to check.

<br><br>

<a name="get_tags"></a>
```lua
object:get_tags() -> table
```

Returns a table of this object's tags.  

**Parameters**  
None

<br><br>

